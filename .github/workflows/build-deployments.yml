name: Docker Image Publish

on:
  push:
    branches:
      - main

env:
  REGISTRY_IMAGE: ghcr.io/graytonio/dotfiles

concurrency:
  group: "build-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-latest
    strategy:
        matrix:
            platform: [
              {arch: "linux/amd64", os: "ubuntu"},
              {arch: "linux/arm64", os: "ubuntu"}
            ]
    permissions:
      contents: read
      packages: write

    steps:
    - name: Prepare
      run: |
        platform=${{ matrix.platform.arch }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Digest
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.platform.os }}.Dockerfile
        platforms: ${{ matrix.platform.arch }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

    - name: Export Digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
    - name: Upload Digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}  